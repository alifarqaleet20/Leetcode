/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        //if both structures go to NULL at the same time their structure is same
        if ( p == NULL && q == NULL )
        {
            return 1;
        }
        //If only one node is NULL it will also return False
        else if ( p == NULL || q == NULL )
        {
            return 0;
        }
        //traversing through the structure and checking if they have the same nodes too
        return p->val == q-> val && isSameTree(p->left,q->left)&&isSameTree(p->right,q->right);
        
    }
};
